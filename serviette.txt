# Set hostname
echo serviette > /etc/hostname

# Allow every user to use DNS resolution                                                                                                                                            
chmod a+r /etc/resolv.conf

# Configure locales
aptitude -y install locales

cat > /etc/locale.gen <<EOF 
de_AT.UTF-8 UTF-8
de_CH.UTF-8 UTF-8
de_DE.UTF-8 UTF-8
en_US.UTF-8 UTF-8
EOF

locale-gen

# Set up Debian's sources.list
cat > /etc/apt/sources.list <<EOL
deb http://ftp.de.debian.org/debian wheezy main contrib non-free
deb http://ftp.de.debian.org/debian wheezy-updates main contrib non-free
deb http://ftp.de.debian.org/debian-security wheezy/updates main contrib non-free
EOL

# Install latest system updates
aptitude update && aptitude -y upgrade

# Reset SSH hostkeys
rm /etc/ssh/*.pub /etc/ssh/*_key
dpkg-reconfigure openssh-server

# Install basic tools
aptitude -y install zsh vim less gzip git-core curl python g++ iw wpasupplicant wireless-tools dnsmasq bridge-utils screen tmux mosh ed strace cowsay figlet toilet at  pv mmv iputils-tracepath tre-agrep urlscan urlview autossh elinks irssi-scripts ncftp sc byobu mc tree atop iftop iotop nmap antiword moreutils net-tools whois pwgen

# Set time zone
echo "Europe/Berlin" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata


# Firmware for rt2800usb 
aptitude install firmware-ralink

== Network Settings ==

cat > /etc/network/interfaces <<EOF
# interfaces(5) file used by ifup(8) and ifdown (8)                                                                                                                                  
auto lo
iface lo inet loopback

# Wired LAN
auto eth0

# Wifi LAN
auto wlan0
iface wlan0 inet manual
    wpa-roam /etc/wpa_supplicant/wpa-roam.conf

# Access Point
auto wlan1
iface wlan1 inet static
    address 192.168.23.1
    netmask 255.255.255.0

# Default connection
iface default inet dhcp
EOF

# Make some basic settings at boot time
sed -i '$ d' /etc/rc.local

cat > /etc/rc.local <<EOF
# Make the blue LED only flash on activity on SD card
echo mmc0 > /sys/class/leds/led1/trigger

# Enable IPv4 forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward

# Masquerade outgoing traffic from interface eth0 and wlan0
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE

# Block outgoing and forwarded communication with other PGP/GPG keyservers
iptables -A OUTPUT -p TCP --dport 11371 -j REJECT
iptables -A OUTPUT -p UDP --dport 11371 -j REJECT
iptables -A FORWARD -p UDP --dport 11371 -j REJECT
iptables -A FORWARD -p TCP --dport 11371 -j REJECT

exit 0
EOF

== ETHERPAD-LITE ==
# NodeJS installieren
curl -sL https://deb.nodesource.com/setup | bash -
aptitude install -y nodejs

# Etherpad-lite installieren
useradd -m etherpad
su etherpad -s /bin/bash
git clone git://github.com/ether/etherpad-lite.git
cd ~/etherpad-lite
npm install ep_list_pads
npm install ep_adminpads
npm install ep_markdown
npm install ep_markdownify

vim ~/etherpad-lite/settings.json

# admin user anlegen

wget https://github.com/serviette/serviette/raw/master/etherpad-lite.init -O /etc/init.d/etherpad-lite 

chmod +x /etc/init.d/etherpad-lite
mkdir /var/log/etherpad-lite
chown etherpad:etherpad /var/log/etherpad-lite/
update-rc.d etherpad-lite defaults
service etherpad-lite start

== XMPP Server ==
aptitude install prosody

cat > /etc/prosody/conf.d/serviette.cfg.lua <<EOF
VirtualHost "serviette.lan"
    allow_registration = true
    authentication = "internal_hashed"
    groups_file = "/etc/prosody/serviette_groups.txt"
EOF

wget https://raw.githubusercontent.com/augustf/prosody-mod_auth_pam/master/mod_auth_pam.lua -O /usr/lib/prosody/modules/mod_auth_pam.lua

sed -i 's/--"groups"/"groups"/' /etc/prosody/prosody.cfg.lua 


== PGP/GPG Key Server ==
aptitude install sks
sks build
chown -Rc debian-sks:debian-sks /var/lib/sks/DB
echo '# Empty - Do not communicate with other keyservers.' >/etc/sks/mailsync
echo '# Empty - Do not communicate with other keyservers.' >/etc/sks/membership
echo 'initstart=yes' >/etc/default/sks
/etc/init.d/sks start

== Webserver ==

aptitude install nginx-light fcgiwrap php5-cgi


/etc/init.d/nginx restart

mkdir /etc/skel/public_html


cat > /etc/sudoers <<EOF
www-data ALL=(root) NOPASSWD: /usr/sbin/useradd"
EOF



== Ikiwiki ==
aptitude install ikiwiki


== IRC Server ==
aptitude install ngircd

sed -i 's/Name = irc.example.net/Name = irc.serviette.lan/' /etc/ngircd/ngircd.conf

/etc/init.d/ngircd restart

== HostAPd ==
aptitude install hostapd
sed -i 's/#DAEMON_CONF=/DAEMON_CONF="\/etc\/hostapd\/hostapd.conf"/' /etc/default/hostapd


cat - << EOF > /etc/hostapd/hostapd.conf
interface=wlan1
bridge=br0
driver=nl80211
country_code=DE
ssid=serviette
hw_mode=g
channel=6
wpa=2
wpa_passphrase=serviette
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
auth_algs=1
macaddr_acl=0
EOF


== DNSMASQ ==
cat - << EOF > /etc/dnsmasq.conf
interface=wlan1
domain=serviette.lan
dhcp-range=192.168.0.50,192.168.0.150,12h
EOF

== SharingIsCaring ==

useradd -m sharingiscaring
su sharingiscaring 
npm install git://github.com/c3d2/sharingiscaring.git

cat - << EOF > /home/sharingiscaring/run.sh
#!/bin/bash

cd $HOME
export PORT=8090
./node_modules/.bin/sharingiscaring
EOF

cat - << EOF > /etc/init.d/sharingiscaring
#!/bin/sh
### BEGIN INIT INFO
# Provides:          sharingiscaring
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts sharing is caring
# Description:       starts sharing is caring using start-stop-daemon
### END INIT INFO

PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/node/bin"
LOGFILE="/var/log/sharingiscaring/sharingiscaring.log"
SIC_DIR="/home/sharingiscaring/"
SIC_BIN="run.sh"
USER="sharingiscaring"
GROUP="sharingiscaring"
DESC="Sharing is Caring"
NAME="sharingiscaring"

set -e

. /lib/lsb/init-functions

start() {
  echo "Starting $DESC... "

    start-stop-daemon --start --chuid "$USER:$GROUP" --background --make-pidfile --pidfile /var/run/$NAME.pid --exec $SIC_DIR/$SIC_BIN -- $LOGFILE || true
  echo "done"
}

#We need this function to ensure the whole process tree will be killed
killtree() {
    local _pid=$1
    local _sig=${2-TERM}
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child} ${_sig}
    done
    kill -${_sig} ${_pid}
}

stop() {
  echo "Stopping $DESC... "
  if test -f /var/run/$NAME.pid; then
    while test -d /proc/$(cat /var/run/$NAME.pid); do
      killtree $(cat /var/run/$NAME.pid) 15
      sleep 0.5
    done
    rm /var/run/$NAME.pid
  fi
  echo "done"
}

status() {
  status_of_proc -p /var/run/$NAME.pid "" "etherpad-lite" && exit 0 || exit $?
}

case "$1" in
  start)
      start
      ;;
  stop)
    stop
      ;;
  restart)
      stop
      start
      ;;
  status)
      status
      ;;
  *)
      echo "Usage: $NAME {start|stop|restart|status}" >&2
      exit 1
      ;;
esac

exit 0
EOF

update-rc.d sharingiscaring defaults


== Email ==

aptitude install exim4-light dovecot-imapd mutt haveged

cat - << EOF > /etc/exim4/update-exim4.conf.conf
dc_eximconfig_configtype='local'
dc_other_hostnames='serviette.lan'
dc_local_interfaces='127.0.0.1 ; ::1'
dc_readhost=''
dc_relay_domains=''
dc_minimaldns='false'
dc_relay_nets=''
dc_smarthost=''
CFILEMODE='644'
dc_use_split_config='false'
dc_hide_mailname=''
dc_mailname_in_oh='true'
dc_localdelivery='mail_spool'
EOF

update-exim4.conf


